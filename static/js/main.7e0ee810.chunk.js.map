{"version":3,"sources":["constants/productConstants.js","actions/cartActions.js","constants/cartConstants.js","components/MessageBox.js","screens/CartScreen.js","components/Product.js","components/LoadingBox.js","screens/HomeScreen.js","actions/productActions.js","screens/OrderScreen.js","actions/orderActions.js","constants/orderConstants.js","components/CheckoutSteps.js","screens/PaymentMethodScreen.js","screens/PlaceOrderScreen.js","screens/ProductScreen.js","screens/ShippingAddressScreen.js","App.js","serviceWorker.js","reducers/productReducers.js","store.js","reducers/cartReducers.js","reducers/orderReducers.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_RESET","addToCart","productId","qty","dispatch","getState","a","Axios","get","data","type","payload","title","image","price","product","id","localStorage","setItem","JSON","stringify","cart","cartItems","MessageBox","props","className","variant","children","CartScreen","match","params","location","search","Number","split","useSelector","state","useDispatch","useEffect","removeFromCartHandler","removeFromCart","onClick","length","to","map","item","key","src","alt","value","onChange","e","target","reduce","c","history","push","disabled","Product","name","description","LoadingBox","HomeScreen","productList","loading","products","error","message","OrderScreen","orderId","useState","sdkReady","setSdkReady","orderDetails","order","orderPay","loadingPay","errorPay","successPay","success","orderDeliver","successDeliver","orderData","addPayPalScript","script","document","createElement","async","onload","body","appendChild","_id","console","log","isPaid","window","paypal","shippingAddress","fullName","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","paidAt","orderItems","itemsPrice","toFixed","shippingPrice","taxPrice","totalPrice","amount","onSuccess","paymentResult","userInfo","userSignin","put","headers","Authorization","token","response","payOrder","CheckoutSteps","step1","step2","step3","PaymentMethodScreen","setPaymentMethod","onSubmit","preventDefault","required","checked","htmlFor","PlaceOrderScreen","useHistory","toPrice","num","addresses","toast","details","stripeKey","billingAddress","ProductScreen","productDetails","detailsProduct","style","height","marginBottom","marginTop","ShippingAddressScreen","setFullName","setAddress","setCity","setPostalCode","setCountry","placeholder","configure","App","exact","path","component","Boolean","hostname","require","initialState","getItem","parse","reducer","combineReducers","action","existItem","find","x","filter","orderCreate","orderMineList","orders","productCreate","productUpdate","productDelete","orderList","orderDelete","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7e0ee810.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\nexport const PRODUCT_DELETE_RESET = 'PRODUCT_DELETE_RESET';\n","import Axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\n  const { data } = await Axios.get(`https://fakestoreapi.com/products/${productId}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      title: data.title,\n      image: data.image,\n      price: data.price,\n      product: data.id,\n      qty\n    },\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\n};\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\nexport const CART_EMPTY = 'CART_EMPTY';\n","import React from 'react';\n\nexport default function MessageBox(props) {\n  return (\n    <div className={`alert alert-${props.variant || 'info'}`}>\n      {props.children}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport MessageBox from '../components/MessageBox';\nimport './CartScreen.css'\n\nexport default function CartScreen(props) {\n  const productId = props.match.params.id;\n  // const [qty, setQty] = useState(1);\n  const qty = props.location.search\n    ? Number(props.location.search.split('=')[1])\n    : 1;\n\n  const cart = useSelector((state) => state.cart);\n\n  const { cartItems } = cart;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    // delete action\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    props.history.push('/shipping');\n  };\n\n  const clearCart = () => {\n    dispatch({ type: CART_EMPTY });\n  }\n  return (\n    <div className=\"row top\">\n      <div className=\"col-2\">\n        <h1>Shopping Cart</h1><button className=\"btn btn-primary\" onClick={clearCart}>Clear Cart</button>\n        {cartItems.length === 0 ? (\n          <MessageBox>\n            Cart is empty. <Link to=\"/\">Go Shopping</Link>\n          </MessageBox>\n        ) : (\n          <ul>\n            {cartItems.map((item) => (\n              <li key={item.product}>\n                <div className=\"row\">\n                  <div>\n                    <img\n                      src={item.image}\n                      alt={item.title}\n                      className=\"small\"\n                    ></img>\n                  </div>\n                  <div className=\"titlee\">\n                    <Link className=\"title\" to={`/product/${item.product}`}>{item.title}</Link>\n                  </div>\n                  <div>\n                    Qty: &nbsp;&nbsp;&nbsp;\n\n                    <select\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                    </select>\n                  </div>\n                  <div>${item.price}</div>\n                  <div>\n                    <button\n                      type=\"button\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      <div className=\"col-1\">\n        <div className=\"card card-body\">\n          <ul>\n            <li>\n              <h2>\n                Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) : $ \n                {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\n              </h2>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                onClick={checkoutHandler}\n                className=\"primary block\"\n                disabled={cartItems.length === 0}\n              >\n                Proceed to Checkout\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Product.css'\n\nexport default function Product(props) {\n  const { product } = props;\n  \n\n\n  return (\n    <div key={product.id} className=\"card\">\n      <Link to={`/product/${product.id}`}>\n        <img className=\"medium card-image\" src={product.image} alt={product.name} />\n      </Link>\n      <div className=\"card-body\">\n        <Link to={`/product/${product.id}`}>\n          <h2 className=\"heading\">{product.title}</h2>\n        </Link>\n        <p className=\"lead\">{product.description}</p>\n        <div className=\"price\">${product.price}</div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function LoadingBox() {\n  return (\n    <div className=\"loading\">\n      <i className=\"fa fa-spinner fa-spin\"></i> Loading...\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\n\nimport Product from '../components/Product';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\n\nexport default function HomeScreen() {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n  return (\n    <div>\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : (\n        <div className=\"row center\">\n          {products.map((product) => (\n            <Product key={product.id} product={product}></Product>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import Axios from 'axios';\nimport {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n} from '../constants/productConstants';\n\nexport const listProducts = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get('https://fakestoreapi.com/products');\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n  try {\n    const { data } = await Axios.get(`https://fakestoreapi.com/products/${productId}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n\n\n","import Axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport {\n  ORDER_DELIVER_RESET,\n  ORDER_PAY_RESET,\n} from '../constants/orderConstants';\n\nexport default function OrderScreen(props) {\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n\n  const {\n    loading: loadingPay,\n    error: errorPay,\n    success: successPay,\n  } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    error: errorDeliver,\n    success: successDeliver,\n  } = orderDeliver;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data } = await Axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (\n      !order ||\n      successPay ||\n      successDeliver ||\n      (order && order._id !== orderId)\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, order, orderId, sdkReady, successPay, successDeliver]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  };\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order._id));\n  };\n\n  return loading ? (\n    <LoadingBox></LoadingBox>\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <h1>Order {order._id}</h1>\n      <div className=\"row top\">\n        <div className=\"col-2\">\n          <ul>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Shipping</h2>\n                <p>\n                  <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                  <strong>Address: </strong> {order.shippingAddress.address},\n                  {order.shippingAddress.city},{' '}\n                  {order.shippingAddress.postalCode},\n                  {order.shippingAddress.country}\n                </p>\n                {order.isDelivered ? (\n                  <MessageBox variant=\"success\">\n                    Delivered at {order.deliveredAt}\n                  </MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n                )}\n              </div>\n            </li>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Payment</h2>\n                <p>\n                  <strong>Method:</strong> {order.paymentMethod}\n                </p>\n                {order.isPaid ? (\n                  <MessageBox variant=\"success\">\n                    Paid at {order.paidAt}\n                  </MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                )}\n              </div>\n            </li>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Order Items</h2>\n                <ul>\n                  {order.orderItems.map((item) => (\n                    <li key={item.product}>\n                      <div className=\"row\">\n                        <div>\n                          <img\n                            src={item.image}\n                            alt={item.name}\n                            className=\"small\"\n                          ></img>\n                        </div>\n                        <div className=\"min-30\">\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </div>\n\n                        <div>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-1\">\n          <div className=\"card card-body\">\n            <ul>\n              <li>\n                <h2>Order Summary</h2>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Items</div>\n                  <div>${order.itemsPrice.toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Shipping</div>\n                  <div>${order.shippingPrice.toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Tax</div>\n                  <div>${order.taxPrice.toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>\n                    <strong> Order Total</strong>\n                  </div>\n                  <div>\n                    <strong>${order.totalPrice.toFixed(2)}</strong>\n                  </div>\n                </div>\n              </li>\n              {!order.isPaid && (\n                <li>\n                  {!sdkReady ? (\n                    <LoadingBox></LoadingBox>\n                  ) : (\n                    <>\n                      {errorPay && (\n                        <MessageBox variant=\"danger\">{errorPay}</MessageBox>\n                      )}\n                      {loadingPay && <LoadingBox></LoadingBox>}\n\n                      <PayPalButton\n                        amount={order.totalPrice}\n                        onSuccess={successPaymentHandler}\n                      ></PayPalButton>\n                    </>\n                  )}\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_MINE_LIST_REQUEST,\n  ORDER_MINE_LIST_FAIL,\n  ORDER_MINE_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState();\n\n    let id = `Elon${Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)}`;\n    order.orderId = id;\n\n    console.log(\"The newly created Order::::: \", order)\n\n    // isPaid: { type: Boolean, default: false },\n    // paidAt: { type: Date },\n    // isDelivered: { type: Boolean, default: false },\n    // deliveredAt: { type: Date },\n\n\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: order });\n    dispatch({ type: CART_EMPTY });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsOrder = (orderData) => async (dispatch, getState) => {\n    console.log(\"llll     lllllllllllllll:::\", orderData)\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: orderData });\n};\n\nexport const payOrder = (order, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_PAY_FAIL, payload: message });\n  }\n};\n\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_MINE_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get('/api/orders', {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    console.log(data);\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/orders/${orderId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.put(\n      `/api/orders/${orderId}/deliver`,\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n  }\n};\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\n\nexport const ORDER_MINE_LIST_REQUEST = 'ORDER_MINE_LIST_REQUEST';\nexport const ORDER_MINE_LIST_SUCCESS = 'ORDER_MINE_LIST_SUCCESS';\nexport const ORDER_MINE_LIST_FAIL = 'ORDER_MINE_LIST_FAIL';\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\n\nexport const ORDER_DELETE_REQUEST = 'ORDER_DELETE_REQUEST';\nexport const ORDER_DELETE_SUCCESS = 'ORDER_DELETE_SUCCESS';\nexport const ORDER_DELETE_FAIL = 'ORDER_DELETE_FAIL';\nexport const ORDER_DELETE_RESET = 'ORDER_DELETE_RESET';\n","import React from 'react';\n\nexport default function CheckoutSteps(props) {\n  return (\n    <div className=\"row checkout-steps\">\n      <div className={props.step1 ? 'active' : ''}>Shipping</div>\n      <div className={props.step2 ? 'active' : ''}>Payment</div>\n      <div className={props.step3 ? 'active' : ''}>Place Order</div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nexport default function PaymentMethodScreen(props) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  if (!shippingAddress.address) {\n    props.history.push('/shipping');\n  }\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    props.history.push('/placeorder');\n  };\n  return (\n    <div>\n      <CheckoutSteps step1 step2></CheckoutSteps>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Select Payment Method</h1>\n        </div>\n        <div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"paypal\"\n              value=\"PayPal\"\n              name=\"paymentMethod\"\n              required\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></input>\n            <label htmlFor=\"paypal\">PayPal</label>\n          </div>\n        </div>\n        <div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"stripe\"\n              value=\"Stripe\"\n              name=\"paymentMethod\"\n              required\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></input>\n            <label htmlFor=\"stripe\">Stripe</label>\n          </div>\n        </div>\n        <div>\n          <label />\n          <button className=\"primary\" type=\"submit\">\n            Continue\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport './CartScreen.css';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {useHistory} from 'react-router-dom';\n\ntoast.configure();\nexport default function PlaceOrderScreen(props) {\n  let history = useHistory();\n  const cart = useSelector((state) => state.cart);\n  // console.log(\":::::::::::::::::::::::::::::::\", cart)\n\n  if (!cart.paymentMethod) {\n    props.history.push('/payment');\n  }\n\n  const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n  cart.itemsPrice = toPrice(\n    cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\n  );\n\n  cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n  cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n  const dispatch = useDispatch();\n\n  const successPaymentHandler = (details, data) => {\n    dispatch({ type: CART_EMPTY });\n    toast(\"Success! Paypal payment successful\", { type: \"success\" });\n    history.push(\"/\")\n\n\n    console.log(\"Pay with PayPal:::::::::::::\", details, data)\n\n    // toast(\"Success! Check email for details\", { type: \"success\" });\n  };\n\n  async function handleToken(token, addresses) {\n    dispatch({ type: CART_EMPTY });\n    dispatch({ type: ORDER_CREATE_RESET });\n    \n    toast(\"Success! Stripe payment successful\", { type: \"success\" });\n    history.push(\"/\")\n    // Perform some Server Side Logic to save data\n    // Note: Stripe does not send receipt on Test Mode Sandbox\n  }  \n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      <div className=\"row top\">\n        <div className=\"col-2\">\n          <ul>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Shipping</h2>\n                <p>\n                  <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n                  <strong>Address: </strong> {cart.shippingAddress.address},\n                  {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}\n                  ,{cart.shippingAddress.country}\n                </p>\n              </div>\n            </li>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Payment</h2>\n                <p>\n                  <strong>Method:</strong> {cart.paymentMethod}\n                </p>\n              </div>\n            </li>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Order Items</h2>\n                <ul>\n                  {cart.cartItems.map((item) => (\n                    <li key={item.product}>\n                      <div className=\"row\">\n                        <div>\n                          <img\n                            src={item.image}\n                            alt={item.title}\n                            className=\"small\"\n                          ></img>\n                        </div>\n                        <div className=\"min-30\">\n                          <Link to={`/product/${item.product}`}>\n                            {item.title}\n                          </Link>\n                        </div>\n\n                        <div>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-1\">\n          <div className=\"card card-body\">\n            <ul>\n              <li>\n                <h2>Order Summary</h2>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Items</div>\n                  <div>${cart.itemsPrice.toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Shipping</div>\n                  <div>${cart.shippingPrice.toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Tax</div>\n                  <div>${cart.taxPrice.toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>\n                    <strong> Order Total</strong>\n                  </div>\n                  <div>\n                    <strong>${cart.totalPrice.toFixed(2)}</strong>\n                  </div>\n                </div>\n              </li>\n              {\n                cart.paymentMethod === \"PayPal\" ? \n                (\n                  <PayPalButton\n                    amount={cart.totalPrice}\n                    onSuccess={successPaymentHandler}\n                  ></PayPalButton>\n                ) : \n                (\n                  <StripeCheckout\n                    stripeKey=\"pk_test_PmbkKDbiWogFurXuUi7Okhiv\"\n                    token={handleToken}\n                    amount={cart.totalPrice * 100}\n                    name={cart.shippingAddress.fullName}\n                    description=\"Elon Jobs System\"\n                    billingAddress\n                    shippingAddress\n                  />\n                )\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsProduct } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\n\nexport default function ProductScreen(props) {\n  const dispatch = useDispatch();\n  const productId = props.match.params.id;\n  const [qty, setQty] = useState(1);\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  useEffect(() => {\n    dispatch(detailsProduct(productId));\n  }, [dispatch, productId]);\n\n  const addToCartHandler = () => {\n    props.history.push(`/cart/${productId}?qty=${qty}`);\n  };\n\n  return (\n    <div>\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : (\n        <div>\n          <Link to=\"/\">Back to Products</Link>\n          <div className=\"row top mt-5\">\n            <div className=\"col-2\">\n              <img\n                className=\"medium\"\n                src={product.image}\n                alt={product.title}\n              ></img>\n            </div>\n            <div className=\"col-1\">\n              <ul>\n                <li>\n                  <h1>{product.title}</h1>\n                </li>\n                <li><strong>Pirce:</strong> ${product.price}</li>\n                <li>\n                  <p className=\"text-muted\"> <strong>Description: </strong><br /> {product.description}</p>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-1\" style={{height: '150px', marginBottom: '50px'}}>\n              <div className=\"card card-body\" style={{height: '150px'}}>\n                <ul>\n                  <li>\n                    <div className=\"row\">\n                      <div>Price:</div>\n                      <div className=\"price\">${product.price}</div>\n                    </div>\n                  </li>\n                  <li>\n                    <div className=\"row\">\n                      <div>Status:</div>\n                      <div>\n                          <span className=\"success\">In Stock</span>\n                      </div>\n                    </div>\n                  </li>\n                  <li>\n                    <button\n                      onClick={addToCartHandler}\n                      className=\"primary block\"\n                      style={{marginTop: '40px'}}\n                    >\n                      Add to Cart\n                    </button>\n                  </li>\n\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nexport default function ShippingAddressScreen(props) {\n  \n  const cart = useSelector((state) => state.cart);\n  const [fullName, setFullName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [country, setCountry] = useState('');\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      saveShippingAddress({ fullName, address, city, postalCode, country })\n    );\n    props.history.push('/payment');\n  };\n  return (\n    <div>\n      <CheckoutSteps step1></CheckoutSteps>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Shipping Address</h1>\n        </div>\n        <div>\n          <label htmlFor=\"fullName\">Full Name</label>\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            placeholder=\"Enter full name\"\n            value={fullName}\n            onChange={(e) => setFullName(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"address\">Address</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            placeholder=\"Enter address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            id=\"city\"\n            placeholder=\"Enter city\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"postalCode\">Postal Code</label>\n          <input\n            type=\"text\"\n            id=\"postalCode\"\n            placeholder=\"Enter postal code\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"country\">Country</label>\n          <input\n            type=\"text\"\n            id=\"country\"\n            placeholder=\"Enter country\"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label />\n          <button className=\"primary\" type=\"submit\">\n            Continue\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport CartScreen from './screens/CartScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nfunction App() {\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n        <header className=\"row\">\n          <div>\n            <Link className=\"brand\" to=\"/\">\n              Elon Store\n            </Link>\n          </div>\n          <div>\n            <Link to=\"/cart\">\n              Cart\n              {cartItems.length > 0 && (\n                <span className=\"badge\">{cartItems.length}</span>\n              )}\n            </Link>\n          </div>\n        </header>\n        <main>\n          <Route exact path=\"/\" component={HomeScreen}></Route>\n          <Route path=\"/cart/:id?\" component={CartScreen}></Route>\n          <Route path=\"/product/:id\" component={ProductScreen} exact></Route>\n          <Route path=\"/shipping\" component={ShippingAddressScreen}></Route>\n          <Route path=\"/payment\" component={PaymentMethodScreen}></Route>\n          <Route path=\"/placeorder\" component={PlaceOrderScreen}></Route>\n          <Route path=\"/order/:id\" component={OrderScreen}></Route>        \n        </main>\n        <footer className=\"row center\">All right reserved | Elon Jobs November 2020 </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_RESET,\n} = require('../constants/productConstants');\n\nexport const productListReducer = (\n  state = { loading: true, products: [] },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true };\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (state = { loading: true }, action) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const productUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_DELETE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  orderCreateReducer,\n  orderDeleteReducer,\n  orderDeliverReducer,\n  orderDetailsReducer,\n  orderListReducer,\n  orderMineListReducer,\n  orderPayReducer,\n} from './reducers/orderReducers';\nimport {\n  productCreateReducer,\n  productDeleteReducer,\n  productDetailsReducer,\n  productListReducer,\n  productUpdateReducer,\n} from './reducers/productReducers';\n\n\nconst initialState = {\n\n  cart: {\n    cartItems: localStorage.getItem('cartItems')\n      ? JSON.parse(localStorage.getItem('cartItems'))\n      : [],\n    shippingAddress: localStorage.getItem('shippingAddress')\n      ? JSON.parse(localStorage.getItem('shippingAddress'))\n      : {},\n    paymentMethod: 'PayPal',\n  },\n};\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n","import {\n  CART_ADD_ITEM,\n  CART_EMPTY,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return { ...state, cartItems: [...state.cartItems, item] };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state, shippingAddress: action.payload };\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state, paymentMethod: action.payload };\n    case CART_EMPTY:\n      return { ...state, cartItems: [] };\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_RESET,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_MINE_LIST_FAIL,\n  ORDER_MINE_LIST_REQUEST,\n  ORDER_MINE_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n  ORDER_DELETE_RESET,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return { loading: true };\n    case ORDER_CREATE_SUCCESS:\n      return { loading: false, success: true, order: action.payload };\n    case ORDER_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (state = { loading: true }, action) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { loading: true };\n    case ORDER_DETAILS_SUCCESS:\n      return { loading: false, order: action.payload };\n    case ORDER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return { loading: true };\n    case ORDER_PAY_SUCCESS:\n      return { loading: false, success: true };\n    case ORDER_PAY_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const orderMineListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_MINE_LIST_REQUEST:\n      return { loading: true };\n    case ORDER_MINE_LIST_SUCCESS:\n      return { loading: false, orders: action.payload };\n    case ORDER_MINE_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return { loading: true };\n    case ORDER_LIST_SUCCESS:\n      return { loading: false, orders: action.payload };\n    case ORDER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\nexport const orderDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELETE_REQUEST:\n      return { loading: true };\n    case ORDER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case ORDER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_DELETE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return { loading: true };\n    case ORDER_DELIVER_SUCCESS:\n      return { loading: false, success: true };\n    case ORDER_DELIVER_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}